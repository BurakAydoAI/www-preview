---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

interface Props {
  imagePath: any;
  altText: string;
  height?: number;
  width?: number;
  loading: any;
  disableAutoPanning?: boolean;
}

// Destructuring Astro.props and setting default value for useBackground
const {
  imagePath,
  altText,
  height,
  width,
  loading = "lazy",
  disableAutoPanning = false,
} = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/**/*.{jpeg,jpg,png,gif,svg}"
);

if (!images[imagePath])
  throw new Error(
    `"${imagePath}" does not exist in glob: "/src/assets/**/*.{jpeg,jpg,png,gif,svg}"`
  );

const imgSrc = images[imagePath]();
---

<div style={{ position: "relative", height: "100%" }}>
  {
    (
      // first loading images could be loading = "eager" but others should be lazy
      <Image
        src={imgSrc}
        alt={altText}
        height={height}
        width={width}
        loading={loading}
        format="avif"
        quality="mid"
        id="product-image-thumb"
      />
    )
  }
  {
    !disableAutoPanning && (
      <div
        class="zoom"
        style={{
          position: "absolute",
          left: 0,
          top: 0,
        }}
        id="product-image-zoom"
      />
    )
  }
</div>
